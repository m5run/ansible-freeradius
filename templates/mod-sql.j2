# {{ ansible_managed }}

sql {{ freeradius_db_host.name }} {
	dialect = "{{ freeradius_sql_mod | default('sqlite') }}"

	driver = "rlm_sql_${dialect}"

	sqlite {
		filename = "/tmp/freeradius.db"
		busy_timeout = 200
		bootstrap = "${modconfdir}/${..:name}/main/sqlite/schema.sql"
	}

	mysql {
		tls {
			ca_file = "/etc/ssl/certs/my_ca.crt"
			ca_path = "/etc/ssl/certs/"
			certificate_file = "/etc/ssl/certs/private/client.crt"
			private_key_file = "/etc/ssl/certs/private/client.key"
			cipher = "DHE-RSA-AES256-SHA:AES128-SHA"

			tls_required = yes
			tls_check_cert = no
			tls_check_cert_cn = no
		}

		warnings = auto
	}

	postgresql {
		send_application_name = yes
	}
	
	radius_db = "host={{ freeradius_db_host.address }} port={{ freeradius_db_port }} dbname={{ freeradius_db_name }} user={{ freeradius_db_user }} password={{ freeradius_db_password }} sslmode={{ freeradius_db_sslmode }}" 
	
	acct_table1 = "radacct"
	acct_table2 = "radacct"
	postauth_table = "radpostauth"
	authcheck_table = "radcheck"
	groupcheck_table = "radgroupcheck"
	authreply_table = "radreply"
	groupreply_table = "radgroupreply"
	usergroup_table = "radusergroup"

	delete_stale_sessions = yes

	pool {
		start = ${thread[pool].start_servers}
		min = ${thread[pool].min_spare_servers}
		max = ${thread[pool].max_servers}
		spare = ${thread[pool].max_spare_servers}
		uses = 0
		retry_delay = 30
		lifetime = 0
		idle_timeout = 60
	}

	read_clients = no
	client_table = "nas"
	group_attribute = "${.:instance}-SQL-Group"

	$INCLUDE ${modconfdir}/${.:name}/main/${dialect}/queries.conf
}
