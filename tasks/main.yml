---
# tasks file for freeradius

- name: Include distribution specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags:
    - freeradius

- include_tasks: CentOS.yml
  when: ansible_distribution == "CentOS"
  tags:
    - freeradius

- include_tasks: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"
  tags:
    - freeradius

- name: Enable sites and modules
  become: true
  file:
    src: "{{ freeradius_confdir }}/{{ item.type }}-available/{{ item.name }}"
    dest: "{{ freeradius_confdir }}/{{ item.type }}-enabled/{{ item.name }}"
    state: link
  loop: "{{ freeradius_sites }}"
  notify:
    - reload freeradius
  tags: 
    - freeradius

- name: Add default site configuration
  become: true
  copy:
    src: "{{ freeradius_default_file }}"
    dest: "{{ freeradius_confdir }}/sites-enabled/default"
    mode: 0640
    owner: root
    group: '{{ freeradius_group }}'
  notify:
    - reload freeradius
  tags:
    - freeradius

- name: Copy postgresql queries
  become: true
  copy:
    src: "psql-queries.conf"
    dest: "{{ freeradius_confdir }}/mods-config/sql/main/postgresql/queries.conf"
    mode: 0640
    owner: root
    group: '{{ freeradius_group }}'
  notify:
    - reload freeradius
  tags:
    - freeradius

- name: Create radiusd configuration file
  become: true
  template:
    src: '{{ freeradius_template }}'
    dest: '{{ freeradius_confdir }}/radiusd.conf'
    owner: root
    group: '{{ freeradius_group }}'
    mode: 0640
  notify:
    - reload freeradius
  tags:
    - freeradius

- name: Create mod-sql configuration files
  become: true
  template:
    src: '{{ freeradius_modsql_template }}'
    dest: '{{ freeradius_confdir }}/mods-enabled/{{ item.name }}'
    owner: root
    group: '{{ freeradius_group }}'
    mode: 0640
  vars:
    freeradius_db_host: "{{ item }}"
  loop: "{{ freeradius_db_hosts }}"
  loop_control:
    index_var: index
  notify:
    - reload freeradius
  tags:
    - freeradius

- name: Activate sql module
  become: true
  replace:
    path: '{{ freeradius_confdir }}/sites-available/{{ item }}'
    regexp: '(\s+)-sql'
    replace: '\1sql'
  loop: 
    - default
    - inner-tunnel
  tags:
    freeradius
  notify: 
    - reload freeradius

- name: Create clients
  become: true
  template:
    src: '{{ freeradius_clients_template }}'
    dest: '{{ freeradius_confdir }}/clients.conf'
    owner: root
    group: '{{ freeradius_group }}'
    mode: 0640
  notify:
    - reload freeradius
  tags:
    - freeradius

- name: Create users
  become: true
  template:
    src: '{{ freeradius_users_template }}'
    dest: '{{ freeradius_confdir }}/users'
    owner: root
    group: '{{ freeradius_group }}'
    mode: 0640
  notify:
    - reload freeradius
  tags:
    - freeradius


- name: Create sqlippool configuration files
  become: true
  template:
    src: '{{ freeradius_sqlippool_template }}'
    dest: '{{ freeradius_confdir }}/mods-enabled/ippool-{{ item.name }}'
    owner: root
    group: '{{ freeradius_group }}'
    mode: 0640
  vars:
    freeradius_db_host: "{{ item }}"
  loop: "{{ freeradius_db_hosts }}"
  loop_control:
    index_var: index
  notify:
    - reload freeradius
  tags:
    - freeradius

- name: "Run freeradius bootstrap"
  become: true
  command:  "{{ freeradius_confdir }}/certs/bootstrap"
  args:
    creates: "{{ freeradius_confdir }}/certs/ca.key"
  tags:
    - freeradius
    
- name: Ensure FreeRADIUS service is started and enabled on boot
  become: true
  service:
    name: "{{ freeradius_service_name }}"
    state: started
    enabled: true
  tags:
    - freeradius
